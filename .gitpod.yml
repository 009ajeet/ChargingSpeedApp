// filepath: c:\Users\91807\Desktop\python script\ChargingSpeedApp\.gitpod.yml
image: gitpod/workspace-android-legacy # Use a Gitpod image with Android tools pre-installed

tasks:
  - name: Accept Licenses & Build APK
    init: |
      echo "Setting up Android SDK environment..."
      # The image should have SDK pre-installed, but ensure paths are set if needed
      # export ANDROID_SDK_ROOT=${ANDROID_HOME:-/usr/local/lib/android/sdk} # Adjust path based on image
      # export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools

      echo "Accepting SDK licenses..."
      yes | sdkmanager --licenses || echo "Failed to accept licenses, continuing..."

      echo "Ensuring gradlew is executable..."
      chmod +x ./gradlew # Make sure gradlew script is executable

      echo "Running Gradle build..."
      ./gradlew assembleDebug # Build the debug APK
    command: |
      echo "Workspace is ready. APK should be in app/build/outputs/apk/debug/"
      echo "You can run './gradlew assembleDebug' again to rebuild."

ports:
  # Define ports if needed for emulators or debugging
  - port: 5900 # Example for VNC if running an emulator visually
    onOpen: ignore
  - port: 6080
    onOpen: ignore

# Optional: Add VS Code extensions for Android/Kotlin development
vscode:
  extensions:
    - vscjava.vscode-java-pack
    - fwcd.kotlin
    - redhat.java
    - vscjava.vscode-gradle
    - ms-vscode.vscode-github-issue-notebooks